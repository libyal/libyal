- ps: If ($$env:BUILD_ENVIRONMENT -eq "msbuild") {
    If (($$env:TARGET -eq "vs2017") -Or ($$env:TARGET -eq "vs2019") -Or ($$env:TARGET -eq "vs2022")) {
      .\syncdokan.ps1 }
    Else {
      .\syncdokan.ps1 -UseLegacyVersion }
    }
- cmd: if [%TARGET%]==[vs2010] (
    pushd ..\dokan &&
    set PYTHONPATH=..\vstools &&
    C:\Python37\python.exe ..\vstools\scripts\msvscpp-convert.py --no-python-dll --output-format 2010 msvscpp\dokan.sln &&
    rd /q /s msvscpp &&
    ren vs2010 msvscpp &&
    popd )
- cmd: if [%TARGET%]==[vs2012] (
    pushd ..\dokan &&
    set PYTHONPATH=..\vstools &&
    C:\Python37\python.exe ..\vstools\scripts\msvscpp-convert.py --no-python-dll --extend-with-x64 --output-format 2012 msvscpp\dokan.sln &&
    rd /q /s msvscpp &&
    ren vs2012 msvscpp &&
    popd )
- cmd: if [%TARGET%]==[vs2013] (
    pushd ..\dokan &&
    set PYTHONPATH=..\vstools &&
    C:\Python37\python.exe ..\vstools\scripts\msvscpp-convert.py --output-format 2013 msvscpp\dokan.sln &&
    rd /q /s msvscpp &&
    ren vs2013 msvscpp &&
    popd )
- cmd: if [%TARGET%]==[vs2015] (
    pushd ..\dokan &&
    set PYTHONPATH=..\vstools &&
    C:\Python37\python.exe ..\vstools\scripts\msvscpp-convert.py --output-format 2015 msvscpp\dokan.sln &&
    rd /q /s msvscpp &&
    ren vs2015 msvscpp &&
    popd )
- ps: If ($$env:BUILD_ENVIRONMENT -eq "msbuild") {
    If (($$env:TARGET -eq "vs2017") -Or ($$env:TARGET -eq "vs2019") -Or ($$env:TARGET -eq "vs2022")) {
      $$Configuration = $$env:CONFIGURATION;
      If ($${Configuration} -eq "VSDebug") {
        $$Configuration = "Debug" }
      .\builddokan.ps1 -Configuration $${Configuration} -Platform "Win32";
      .\builddokan.ps1 -Configuration $${Configuration} -Platform "x64"; }
    Else {
      .\builddokan.ps1 -UseLegacyVersion }
    }
